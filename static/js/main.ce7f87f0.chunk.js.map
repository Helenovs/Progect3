{"version":3,"sources":["serviceWorker.js","constants/routes.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/sign_out.js","components/SignOut/index.js","components/Navigation/navigation.js","components/Navigation/index.js","components/Landing/index.js","components/Landing/landing.js","components/SignUp/sign_up.js","components/SignUp/index.js","components/SignIn/sign_in.js","components/SignIn/index.js","components/PasswordForget/index.js","components/PasswordForget/password_forget.js","components/Session/context.js","components/Messages/MessageItem.js","components/Messages/MessageList.js","components/Messages/Messages.js","components/Messages/index.js","components/Home/home.js","components/Home/index.js","components/Account/index.js","components/Account/account.js","components/ChatRoom/chatroom.js","components/ChatRoom/index.js","components/Admin/index.js","components/Admin/admin.js","components/App/app.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","LANDING","HOME","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","concat","users","message","messages","app","initializeApp","database","SignOutButton","then","history","push","ROUTES","type","className","onClick","SignOut","withRouter","NavigationAuth","src","Link","to","NavigationNonAuth","Navigation","_ref","authUser","navigation_NavigationAuth","navigation_NavigationNonAuth","Landing","class","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","possibleConstructorReturn","getPrototypeOf","call","onSubmit","event","_this$state","state","set","setState","objectSpread","catch","preventDefault","onChange","defineProperty","target","name","value","console","log","_this$state2","isInvalid","placeholder","disabled","SignUpLink","SignUpForm","SignUp","SignInFormBase","SignInForm","SignIn","sign_up_SignUpLink","PasswordForget","AuthUserContext","MessageItem","onToggleEditMode","editMode","editText","text","onChangeEditText","onSaveEditText","onEditMessage","_this$props","onRemoveMessage","userId","editedAt","MessageList","map","Messages_MessageItem","key","Messages","onListenForMessages","loading","orderByChild","limitToLast","limit","on","snapshot","messageObject","val","messageList","keys","onChangeText","onCreateMessage","getUid","createdAt","Date","remove","onNextPage","off","_this2","Session_context","Messages_MessageList","bind","Home","components_Messages","Account","ChatRoom","usersObject","usersList","chatroom_UserList","UserList","Admin","App","listener","onAuthStateChanged","BrowserRouter","components_Navigation","Route","exact","path","component","ReactDOM","render","context","Provider","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce7f87f0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nexport const LANDING = '/Progect3';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/chatroom';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const CHATROOM = '/users';\nexport const PASSWORD_FORGET = '/pw-forget';\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","// import React from 'react';\nimport app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst config = {\n    apiKey: \"AIzaSyBFLsBsYruDOWH003E0jvghqw4e_PocED8\",\n    authDomain: \"messengerdb-777eb.firebaseapp.com\",\n    databaseURL: \"https://messengerdb-777eb.firebaseio.com\",\n    projectId: \"messengerdb-777eb\",\n    storageBucket: \"messengerdb-777eb.appspot.com\",\n    messagingSenderId: \"875521669810\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n    this.auth = app.auth();\n    this.db = app.database();\n  }\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n   this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n   this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = password =>\n   this.auth.currentUser.updatePassword(password);\n\n   // *** User API ***\n\n  user = uid => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref('users');\n\n  // *** Message API ***\n\n  message = uid => this.db.ref(`messages/${uid}`);\n\n  messages = () => this.db.ref('messages');\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport * as ROUTES from '../../constants/routes';\nimport './sign_out.css';\n\nimport { withFirebase } from '../Firebase';\n\nclass SignOutButton extends Component {\n  signOut = () => {\n    this.props.firebase.doSignOut()\n    .then(() => {\n      this.props.history.push(ROUTES.LANDING);\n    });\n  }\n\n  render () {\n    return(\n      <button type=\"button\" className=\"btn btn-outline-warning\" onClick={ this.signOut }>\n        Sign Out\n      </button>\n    );\n  }\n}\nexport default withRouter(withFirebase(SignOutButton));\n\n\n\n//\n// const SignOutButton = ({ firebase }) => (\n//\n//\n//   <button type=\"button\" className=\"btn btn-outline-warning\" onClick={firebase.doSignOut}>\n//     Sign Out\n//   </button>\n// );\n//\n// export default withFirebase(SignOutButton);\n","import SignOut from './sign_out';\n\nexport default SignOut;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport SignOutButton from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\n\nconst Navigation = ({ authUser }) => (\n  <div>{authUser ? <NavigationAuth /> : <NavigationNonAuth />}</div>\n);\nconst NavigationAuth = (props) => (\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n  <div className=\"collapse navbar-collapse\">\n  <img src=\"chat.png\" className=\"navimg\"/>\n  <ul className=\"navbar-nav mr-auto\">\n    <li className=\"nav-item active\">\n      <Link to={ROUTES.HOME } className=\"nav-link\">ChatRoom</Link>\n    </li>\n\n    <li className=\"nav-item active\">\n      <Link to={ROUTES.CHATROOM} className=\"nav-link\">Users</Link>\n    </li>\n\n    <li className=\"nav-item active\">\n      <SignOutButton history={props.history}/>\n    </li>\n  </ul>\n  </div>\n  </nav>\n);\n\nconst NavigationNonAuth = () => (\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n  <div className=\"collapse navbar-collapse\">\n  <img src=\"chat.png\" className=\"navimg\"/>\n  <ul className=\"navbar-nav mr-auto\">\n    <li className=\"nav-item active\">\n      <Link to={ROUTES.LANDING} className=\"nav-link\">Landing</Link>\n    </li>\n    <li className=\"nav-item active\">\n      <Link to={ROUTES.SIGN_IN} className=\"nav-link\">Sign In</Link>\n    </li>\n  </ul>\n  </div>\n  </nav>\n);\n\n\n\n\n\n\n// const Navigation = () => (\n//   <div>\n//       <ul>\n//         <li>\n//           <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n//         </li>\n//         <li>\n//           <Link to={ROUTES.LANDING}>Landing</Link>\n//         </li>\n//         <li>\n//           <Link to={ROUTES.HOME}>Home</Link>\n//         </li>\n//         <li>\n//           <Link to={ROUTES.ACCOUNT}>Account</Link>\n//         </li>\n//         <li>\n//           <Link to={ROUTES.ADMIN}>Admin</Link>\n//         </li>\n//         <li>\n//         <SignOutButton />\n//       </li>\n//       </ul>\n//     </div>\n// );\n\nexport default Navigation;\n","import Navigation from './navigation';\n\nexport default Navigation;\n","import Landing from './landing';\n\nexport default Landing;\n","import React from 'react';\n\nconst Landing = () => (\n  <div class=\"container jumbotron\">\n    <h1>Welcome to our ChatRoom</h1>\n    <p>\n    Chat is designed for real-time, unstructured conversations with users who are signed\n    on to the site at the same time.  By default, Chat messages are saved and are visible to\n    all users so that all site participants can benefit from clarifying conversations and\n    questions and answers.\n    </p>\n  </div>\n);\n\nexport default Landing;\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n// import { FirebaseContext } from '../Firebase';\nimport { withFirebase } from '../Firebase';\n\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUp = () => (\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { username, email, passwordOne } = this.state;\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        return this.props.firebase\n          .user(authUser.user.uid)\n          .set({\n            username,\n            email,\n          });\n      })\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n    console.log(this.setState());\n  };\n\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n    } = this.state;\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP} className=\"btn btn-secondary\">Sign Up</Link>\n  </p>\n);\n// const SignUpForm = withFirebase(SignUpFormBase);\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\nexport default SignUp;\n\nexport { SignUpForm, SignUpLink };\n","import SignUp from './sign_up';\nimport { SignUpForm, SignUpLink } from './sign_up';\n\n\nexport { SignUpForm, SignUpLink };\nexport default SignUp;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n// import { compose } from 'recompose';\n\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport './sign_in.css'\n\nconst SignIn = () => (\n  <div className=\"sign-form\">\n  <h1>SignIn</h1>\n  <SignInForm />\n  <SignUpLink />\n  </div>\n);\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n    <div className=\"sign-form\">\n      <form onSubmit={this.onSubmit}>\n        <div className=\"form-group\">\n        <input\n          className=\"form-control\"\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        </div>\n        <div className=\"form-group\">\n        <input\n          className=\"form-control\"\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        </div>\n        <button disabled={isInvalid} type=\"submit\" className=\"btn btn-secondary\">\n          Sign In\n        </button>\n\n        {error && <p>{error.message}</p>}\n\n      </form>\n    </div>\n    );\n  }\n}\nconst SignInForm = withRouter(withFirebase(SignInFormBase));\n// const SignInForm = compose(\n//   withRouter,\n//   withFirebase,\n// )(SignInFormBase);\n\nexport default SignIn;\n\nexport { SignInForm };\n","import SignIn from './sign_in';\n\nexport default SignIn;\n","import PasswordForget from './password_forget';\n\nexport default PasswordForget;\n","import React from 'react';\n\nconst PasswordForget = () => (\n  <div>\n    <h1>PasswordForget</h1>\n  </div>\n);\n\nexport default PasswordForget;\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import React, { Component } from 'react';\nimport './Messages.css';\n\nclass MessageItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editMode: false,\n      editText: this.props.message.text,\n    };\n  }\n\n  onToggleEditMode = () => {\n    this.setState(state => ({\n      editMode: !state.editMode,\n      editText: this.props.message.text,\n    }));\n  };\n\n  onChangeEditText = event => {\n    this.setState({ editText: event.target.value });\n  };\n\n  onSaveEditText = () => {\n    this.props.onEditMessage(this.props.message, this.state.editText);\n\n    this.setState({ editMode: false });\n  };\n\n  render() {\n    const { message, onRemoveMessage } = this.props;\n    const { editMode, editText } = this.state;\n\n    return (\n      <div className=\"modal-dialog\">\n      <div className=\"modal-content\">\n        <li className=\"sign_del\">\n          {editMode ? (\n            <input\n              className=\"input-header\"\n              type=\"text\"\n              value={editText}\n              onChange={this.onChangeEditText}\n            />\n          ) : (\n            <span>\n              <div className=\"modal-header\">\n                {message.user.username || message.user.userId}\n              </div>{' '}\n              <div className=\"modal-header\">\n              {message.text} {message.editedAt && <span>(Edited)</span>}\n              </div>\n            </span>\n          )}\n          <div className=\"modal-footer\">\n          {editMode ? (\n            <span>\n              <button onClick={this.onSaveEditText} className=\"btn btn-warning\">Save</button>\n              <button onClick={this.onToggleEditMode} className=\"btn btn-warning\">Reset</button>\n            </span>\n          ) : (\n            <button onClick={this.onToggleEditMode} className=\"btn btn-warning\">Edit</button>\n          )}\n\n          {!editMode && (\n            <button\n              type=\"button\"\n              onClick={() => onRemoveMessage(message.uid)}\n              className=\"btn btn-warning\"\n            >\n              Delete\n            </button>\n          )}\n          </div>\n        </li>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MessageItem;\n","import React from 'react';\n\nimport MessageItem from './MessageItem';\n\nconst MessageList = ({\n  messages,\n  onEditMessage,\n  onRemoveMessage,\n}) => (\n  <ul>\n    {messages.map(message => (\n      <MessageItem\n        key={message.uid}\n        message={message}\n        onEditMessage={onEditMessage}\n        onRemoveMessage={onRemoveMessage}\n      />\n    ))}\n  </ul>\n);\n\nexport default MessageList;\n","import React, { Component } from 'react';\n\nimport { AuthUserContext } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport MessageList from './MessageList';\n\nclass Messages extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: '',\n      loading: false,\n      messages: [],\n      limit: 5,\n    };\n  }\n\n  componentDidMount() {\n    this.onListenForMessages();\n  }\n\n  onListenForMessages = () => {\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .messages()\n      .orderByChild('createdAt')\n      .limitToLast(this.state.limit)\n      .on('value', snapshot => {\n        const messageObject = snapshot.val();\n\n        if (messageObject) {\n          const messageList = Object.keys(messageObject).map(key => ({\n            ...messageObject[key],\n            uid: key,\n          }));\n\n          this.setState({\n            messages: messageList,\n            loading: false,\n          });\n        } else {\n          this.setState({ messages: null, loading: false });\n        }\n      });\n  };\n\n  componentWillUnmount() {\n    this.props.firebase.messages().off();\n  }\n\n  onChangeText = event => {\n    this.setState({ text: event.target.value });\n    // console.log(event.target.value );\n  };\n\n  onCreateMessage = (event, authUser) => {\n\n    this.props.firebase.messages().push({\n      text: this.state.text,\n      userId: this.props.firebase.auth.getUid(), // authUser.uid,\n      createdAt: new Date()//this.props.firebase.serverValue.TIMESTAMP,\n    });\n    // console.log(\"USER\", authUser.uid);\n\n    this.setState({ text: '' });\n\n    event.preventDefault();\n  };\n\n  onEditMessage = (message, text) => {\n\n\n    this.props.firebase.message(message.uid).set({\n      ...message,\n      text,\n      editedAt: new Date()//this.props.firebase.serverValue.TIMESTAMP,\n    });\n  };\n\n  onRemoveMessage = uid => {\n    this.props.firebase.message(uid).remove();\n  };\n\n  onNextPage = () => {\n    this.setState(\n      state => ({ limit: state.limit + 5 }),\n      this.onListenForMessages,\n    );\n  };\n\n  render() {\n    const { users } = this.props;\n    const { text, messages, loading } = this.state;\n\n\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <div>\n            {!loading && messages && (\n              <button type=\"button\" onClick={this.onNextPage} className=\"btn btn-primary btndop\">\n                More\n              </button>\n            )}\n\n            {loading && <div>Loading ...</div>}\n\n            {messages && (\n              <MessageList\n                messages={messages.map(message => ({\n                  ...message,\n                  user: users\n                    ? users[message.userId]\n                    : { userId: message.userId },\n                }))}\n                onEditMessage={this.onEditMessage.bind(this)}\n                onRemoveMessage={this.onRemoveMessage.bind(this)}\n              />\n            )}\n\n            {!messages && <div>There are no messages ...</div>}\n\n            <form\n              onSubmit={event =>\n                this.onCreateMessage(event, authUser)\n              }\n            >\n              <input\n                type=\"text\"\n                value={text}\n                onChange={this.onChangeText}\n                className=\"form-control form-control-lg\"\n              />\n              <button type=\"submit\" className=\"btn btn-primary\">Send Message</button>\n            </form>\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(Messages);\n","import Messages from './Messages.js';\n\nexport default Messages;\n","import React, { Component } from 'react';\n// import { compose } from 'recompose';\nimport Messages from '../Messages';\n\nimport { withAuthorization, withEmailVerification } from '../Session';\nimport { withFirebase } from '../Firebase';\n\n\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      users: null,\n    };\n  }\n\n  componentDidMount() {\n    this.props.firebase.users().on('value', snapshot => {\n      this.setState({\n        users: snapshot.val(),\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>CHATROOM</h1>\n        <p className=\"alert alert-dismissible alert-info\">The ChatRoom is accessible by every signed in user.</p>\n\n        <Messages users={this.state.users} />\n      </div>\n    );\n  }\n}\n\n// const condition = authUser => !!authUser;\n\n// export default withFirebase(withEmailVerification(withAuthorization(Home)));\nexport default withFirebase(Home);\n","import Home from './home';\n\nexport default Home;\n","import Account from './account';\n\nexport default Account;\n","import React from 'react';\n\nconst Account = () => (\n  <div>\n    <h1>Account</h1>\n  </div>\n);\n\nexport default Account;\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nclass ChatRoom extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      users: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.users().on('value', snapshot => {\n      const usersObject = snapshot.val();\n\n      const usersList = Object.keys(usersObject).map(key => ({\n        ...usersObject[key],\n        uid: key,\n      }));\n\n      this.setState({\n        users: usersList,\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n   this.props.firebase.users().off();\n }\n\n  render() {\n    const { users, loading } = this.state;\n    return (\n      <div>\n        <h1>List of all Signed in Users</h1>\n        {loading && <div>Loading ...</div>}\n\n        <UserList users={users} />\n      </div>\n    );\n  }\n}\n\nconst UserList = ({ users }) => (\n  <ul>\n    {users.map(user => (\n      <li key={user.uid}>\n        <span>\n          <strong>Username:</strong> {user.username}\n        </span>\n      </li>\n    ))}\n  </ul>\n);\nexport default withFirebase(ChatRoom);\n","import ChatRoom from './chatroom';\n\nexport default ChatRoom;\n","import Admin from './admin';\n\nexport default Admin;\n","import React from 'react';\n\nconst Admin = () => (\n  <div>\n    <h1>Admin</h1>\n  </div>\n);\n\nexport default Admin;\n","import React, { Component } from 'react';\n// import { BrowserRouter as Router } from 'react-router-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Navigation from '../Navigation';\nimport Landing from '../Landing';\nimport SignUp from '../SignUp';\nimport SignIn from '../SignIn';\nimport PasswordForget from '../PasswordForget';\nimport Home from '../Home';\nimport Account from '../Account';\nimport ChatRoom from '../ChatRoom';\nimport Admin from '../Admin';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n// import './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authUser: null,\n    };\n  }\n\n  // componentDidMount() {\n  //   this.props.firebase.auth.onAuthStateChanged(authUser => {\n  //     authUser\n  //       ? this.setState({ authUser })\n  //       : this.setState({ authUser: null });\n  //   });\n  // }\n\n  componentDidMount() {\n    this.listener = this.props.firebase.auth.onAuthStateChanged(\n      authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      },\n    );\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n\n  render() {\n    return (\n      <Router>\n      <div>\n        <Navigation authUser={this.state.authUser} />\n\n        <hr />\n\n        <Route exact path={ROUTES.LANDING} component={Landing} />\n        <Route path={ROUTES.SIGN_UP} component={SignUp} />\n        <Route path={ROUTES.SIGN_IN} component={SignIn} />\n        <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForget} />\n        <Route path={ROUTES.HOME} component={Home} />\n        <Route path={ROUTES.ACCOUNT} component={Account} />\n        <Route path={ROUTES.CHATROOM} component={ChatRoom} />\n        <Route path={ROUTES.ADMIN} component={Admin} />\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default withFirebase(App);\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}